[project]
name = "config-wizard"
version = "0.1.0"
description = "A simple wizard for setting up configuration files."
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
authors = [
    {name = "Federico Carne",email = "federico.carne@hotmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "pydantic[email] (>=2.11.7,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "jsonschema (>=4.25.0,<5.0.0)",
    "openapi-pydantic (>=0.5.1,<0.6.0)",
    "typing-extensions (>=4.14.1,<5.0.0)",
]

[project.scripts]
config-wizard = "config_wizard.cli:main"

[project.urls]
"Homepage" = "https://github.com/fcarne/config-wizard"
"Documentation" = "https://config-wizard.readthedocs.io/"
"Repository" = "https://github.com/fcarne/config-wizard"
"Issues" = "https://github.com/fcarne/config-wizard/issues"
"Changelog" = "https://config-wizard.readthedocs.io/en/latest/changelog.html"

[project.optional-dependencies]
dev = [
    "pytest >=8.4.0,<9.0.0",
    "pytest-cov >=6.2.0,<7.0.0",
    "pytest-mock >=3.14.0,<4.0.0",
]
docs = [
    "mkdocs >=1.6.0,<2.0.0",
    "mkdocs-material >=9.0.0,<10.0.0",
    "mkdocs-redirects >=1.0.0,<2.0.0",
    "mkdocstrings[python] >=0.30.0,<0.31.0",
]
streamlit = [
    "streamlit >=1.47.0,<2.0.0",
]
cli = [
    "typer >=0.15.0,<1.0.0",
    "rich >=14.0.0,<15.0.0",
]
textual = [
    "textual >=5.0.1,<6.0.0",
]

[tool.ruff]
line-length = 120

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true

[tool.pytest.ini]
addopts = "-ra -q --cov=config_wizard --cov-report=html --cov-report=term-missing --cov-branch"

[tool.coverage.report]
exclude_also = [
    'def __repr__',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
